#----
# knn
 

# Set random seed. Don't remove this line.
set.seed(1)

# Load the class package, define range and accs
library(class)
range <- 1:round(0.2 * nrow(knn_train))
accs <- rep(0, length(range))

for (k in range) {

  # Fill in the ___, make predictions using knn: pred
  pred <- knn(knn_train, knn_test, train_labels, k = k)

  # Fill in the ___, construct the confusion matrix: conf
  conf <- table(test_labels, pred)

  # Fill in the ___, calculate the accuracy and store it in accs[k]
  accs[k] <- sum(diag(conf)) / sum(conf)
}

# Plot the accuracies. Title of x-axis is "k".
plot(range, accs, xlab = "k")

# Calculate the best k
which.max(accs)



#----
#AUC-calculate
# test and train are loaded into your workspace

# Build tree and predict probability values for the test set
set.seed(1)
tree <- rpart(income ~ ., train, method = "class")
probs <- predict(tree, test, type = "prob")[,2]

# Load the ROCR library
library(ROCR)

# Make a prediction object: pred
pred= prediction(probs ,test$income   )

# Make a performance object: perf
perf=performance(pred , "auc")

# Print out the AUC
perf@y.values[[1]]



# Load the ROCR library
library(ROCR)

# Make the prediction objects for both models: pred_t, pred_k
pred_t= prediction(probs_t,test$spam )
pred_k= prediction(probs_k,test$spam )

# Make the performance objects for both models: perf_t, perf_k
perf_t=performance(pred_t, "tpr","fpr")
perf_k=performance(pred_k, "tpr","fpr")

# Draw the ROC lines using draw_roc_lines()
draw_roc_lines(perf_t, perf_k)